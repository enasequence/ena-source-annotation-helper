image: openjdk:17-slim-bullseye

variables:
  VERSION: "1.1.6"
  IMPORTER_VERSION: "1.0.4"
  DOCKER_DRIVER: overlay2
  CONTAINER_APP_IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$VERSION
  JOB_LIBRARY: "/nfs/production/cochrane/ena/tools/sah-biocollections-importer/lib"
  JOB_LIBRARY_TEST: "/nfs/production/cochrane/ena/tools/sah-biocollections-importer/test/lib"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  ## Set timezone, default gitlab/docker can cause problem with DB
  - TZ=Europe/London
  - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
  ## SSH config
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  - sed -i -e "s/<k8s_hh_wp_37_cluster_auth>/$K8S_HH_WP_37_CLUSTER_AUTH/" -e "s/<k8s_hh_wp_37_server>/$K8S_HH_WP_37_SERVER/" -e "s/<k8s_hh_wp_37_cluster>/$K8S_HH_WP_37_CLUSTER/" -e "s/<k8s_hh_wp_37_user>/$K8S_HH_WP_37_USER/" -e "s/<k8s_hh_wp_37_user_token>/$K8S_HH_WP_37_USER_TOKEN/" Kubernetes-cluster.yaml
  - export KUBECONFIG=./Kubernetes-cluster.yaml
stages:
  - test
  - build
  - dockerise
  - deploy

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

test:
  stage: test
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
  script:
    - sed -i 's/<env>/test/' src/main/resources/application.properties
    - sed -i -e "s/<k8s_es_username>/$K8S_ES_USERNAME/" -e "s/<k8s_es_password>/$K8S_ES_PASSWORD/" -e "s/<es-port>/$ES_DEV_PORT/" src/main/resources/application-test.properties
    - ./gradlew clean test
  allow_failure: true
  tags:
    - dcap-gitlab-runner

build_dev:
  stage: build
  script:
    - sed -i 's/<env>/dev/' src/main/resources/application.properties
    - sed -i 's/<env>/dev/' biocollections-importer/src/main/resources/application.properties
    - sed -i -e "s/<k8s_es_username>/$K8S_ES_USERNAME/" -e "s/<k8s_es_password>/$K8S_ES_PASSWORD/" -e "s/<es-port>/$ES_DEV_PORT/" src/main/resources/application-dev.properties
    - sed -i -e "s/<k8s_es_username>/$K8S_ES_USERNAME/" -e "s/<k8s_es_password>/$K8S_ES_PASSWORD/" -e "s/<es-port>/$ES_DEV_PORT/" biocollections-importer/src/main/resources/application-dev.properties
    - ./gradlew clean build -x test
  tags:
    - dcap-gitlab-runner
  artifacts:
    paths:
      - build/libs/source-annotation-helper-${VERSION}.jar
      - biocollections-importer/build/libs/biocollections-importer-${IMPORTER_VERSION}.jar

build_prod:
  stage: build
  script:
    - sed -i 's/<env>/prod/' src/main/resources/application.properties
    - sed -i 's/<env>/prod/' biocollections-importer/src/main/resources/application.properties
    - sed -i -e "s/<k8s_es_username>/$K8S_ES_USERNAME/" -e "s/<k8s_es_password>/$K8S_ES_PASSWORD/" -e "s/<es-port>/$ES_PROD_PORT/" src/main/resources/application-prod.properties
    - sed -i -e "s/<k8s_es_username>/$K8S_ES_USERNAME/" -e "s/<k8s_es_password>/$K8S_ES_PASSWORD/" -e "s/<es-port>/$ES_PROD_PORT/" biocollections-importer/src/main/resources/application-prod.properties
    - ./gradlew clean build -x test
  tags:
    - dcap-gitlab-runner
  artifacts:
    paths:
      - build/libs/source-annotation-helper-${VERSION}.jar
      - biocollections-importer/build/libs/biocollections-importer-${IMPORTER_VERSION}.jar

build_docker_image:
  image: docker:stable
  services:
    - name: docker:dind
      alias: docker
      command: [ "--tls=false" ]
  stage: dockerise
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    CONTAINER_RUNTIME_IMAGE: runtime
  script:
    - sed -i -e "s/<app_version>/$VERSION/" Dockerfile
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_BUILD_TOKEN
    - docker build --no-cache --rm=true -t $CONTAINER_APP_IMAGE .
    - docker push $CONTAINER_APP_IMAGE
  after_script:
    - docker logout ${CI_REGISTRY}
  tags:
    - dcap-gitlab-runner-docker
  dependencies:
    - build_prod

deploy_importer_tool_dev:
  stage: deploy
  before_script:
    # Setup SSH deploy keys
    - apt-get update
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$CODON_DATALIB_SSH_PVT_KEY")
    - mkdir -p ~/.ssh
  script:
    - chmod u+x biocollections-importer/build/libs/biocollections-importer-${IMPORTER_VERSION}.jar
    - scp -o StrictHostKeyChecking=no biocollections-importer/build/libs/biocollections-importer-${IMPORTER_VERSION}.jar datalib@codon-login-01.ebi.ac.uk:${JOB_LIBRARY_TEST}
    - ssh datalib@codon-login-01.ebi.ac.uk "ln -sf ${JOB_LIBRARY_TEST}/biocollections-importer-${IMPORTER_VERSION}.jar ${JOB_LIBRARY_TEST}/biocollections-importer.jar"
  tags:
    - dcap-gitlab-runner
  dependencies:
    - build_dev

deploy_importer_tool_prod:
  stage: deploy
  before_script:
    # Setup SSH deploy keys
    - apt-get update
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$CODON_DATALIB_SSH_PVT_KEY")
    - mkdir -p ~/.ssh
  script:
    - chmod u+x biocollections-importer/build/libs/biocollections-importer-${IMPORTER_VERSION}.jar
    - scp -o StrictHostKeyChecking=no biocollections-importer/build/libs/biocollections-importer-${IMPORTER_VERSION}.jar datalib@codon-login-01.ebi.ac.uk:${JOB_LIBRARY}
    - ssh datalib@codon-login-01.ebi.ac.uk "ln -sf ${JOB_LIBRARY}/biocollections-importer-${IMPORTER_VERSION}.jar ${JOB_LIBRARY}/biocollections-importer.jar"
  tags:
    - dcap-gitlab-runner
  dependencies:
    - build_prod
  only:
    - master
  when: manual

k8s-deploy-dev:
  image: dtzar/helm-kubectl:3.11.0
  stage: deploy
  script:
    - sed -i -e "s#<container_app_image>#$CONTAINER_APP_IMAGE#" Kubernetes-dev-deployment.yaml
    - kubectl apply -f Kubernetes-dev-deployment.yaml --namespace=ena-dcap
  tags:
    - dcap-gitlab-runner-docker
  dependencies:
    - build_docker_image
  when: manual

k8s-deploy-prod:
  image: dtzar/helm-kubectl:3.11.0
  stage: deploy
  only:
    - master
  script:
    - sed -i -e "s#<container_app_image>#$CONTAINER_APP_IMAGE#" Kubernetes-prod-deployment.yaml
    - kubectl apply -f Kubernetes-prod-deployment.yaml --namespace=ena-dcap
  tags:
    - dcap-gitlab-runner-docker
  dependencies:
    - build_docker_image
  when: manual
